generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  name           String
  email          String     @unique
  picture        String?
  rule           String
  password       String
  accessToken    String
  books          Book[]
  feedbacks      Feedback[]
  expirationTime DateTime
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Book {
  id           String      @id @default(uuid())
  title        String
  description  String
  publishedUrl String
  userId       String
  author       User        @relation(fields: [userId], references: [id])
  heroPathUrl  String
  characters   Character[]
  conclued     Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Character {
  id                String         @id @default(uuid())
  name              String
  heroPathUrl       String
  description       String
  age               Int
  hairColor         String
  sexuality         String
  race              String
  lifeStatus        String
  lifeStatusDetails String
  relationships     Relationship[]
  book              Book           @relation(fields: [bookId], references: [id])
  bookId            String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model Relationship {
  id               String    @id @default(uuid())
  characterId      String
  characters       Character @relation(fields: [characterId], references: [id])
  relationshipType String
  intention        String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Feedback {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  type       String
  feedback   String
  screenshot String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Goal {
  id                  String   @id @default(uuid())
  email               String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  goalComplete        Boolean
  goalCompletePercent Float
  words               Int
  goal                Int
}
